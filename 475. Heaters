var findRadius = function(houses, heaters) {
    let distance = 0;
    heaters.sort((a, b) => a - b);
    houses.forEach(val => {
        distance = Math.max(distance, closestHeaterDistance(val, heaters, 0, heaters.length-1));
    });
    return distance;
};

function closestHeaterDistance(house, heaters, start, end) {
    
    let mid = Math.floor((start + end) / 2);
    if (start == end) {
            return Math.abs(house - heaters[start]);
    };
    if (house < heaters[mid]) {
        if (mid === 0) {
            return Math.abs(house - heaters[0])
        };
        if (house > heaters[mid - 1]) {
            return Math.min(Math.abs(house - heaters[mid]), Math.abs(house - heaters[mid - 1]));
        }
        return closestHeaterDistance(house, heaters, start, mid - 1);
    } else if (house > heaters[mid]) {
        if (mid === heaters.length - 1){
            return Math.abs(house - heaters[heaters.length - 1]);
        }
        if (house < heaters[mid + 1]) {
            return Math.min(Math.abs(house - heaters[mid]), Math.abs(house - heaters[mid + 1]));
        }
        return closestHeaterDistance(house, heaters, mid + 1, end);
    }
    return 0;
}


///////////////////////

var findRadius2 = function(houses, heaters) {
   
    let minimumRadius = 0;
    houses.forEach((housePosition, houseIndex) =>{
        let minimumDistance = Math.pow(2,32);
        heaters.forEach((heaterPosition, heaterIndex) => {
            minimumDistance = Math.min(Math.abs(housePosition - heaterPosition), minimumDistance);
        
        });
         minimumRadius = Math.max(minimumRadius, minimumDistance);
    })
    return minimumRadius;
};
